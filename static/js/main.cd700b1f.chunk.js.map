{"version":3,"sources":["components/AuthHero.tsx","components/Input/Input.tsx","components/Button/Button.tsx","pages/Login.page.tsx","pages/Signup.page.tsx","pages/Auth.page.tsx","components/Sidebar.tsx","pages/Dashboard.page.tsx","pages/Lecture.page.tsx","pages/Record.page.tsx","pages/AppContainer.page.tsx","pages/NotFound.page.tsx","App.tsx","index.tsx"],"names":["AuthHero","props","console","log","useEffect","className","defaultProps","memo","Input","touched","error","placeholder","id","rest","Button","children","theme","counter","filled","rounded","filledClasses","themeClasses","roundedClasses","Login","useFormik","initialValues","username","password","validationSchema","yup","shape","required","min","onSubmit","data","setSubmitting","setTimeout","history","push","getFieldProps","handleSubmit","isSubmitting","errors","useHistory","useState","isShown","setIsShown","show","target","href","to","action","type","autoComplete","onClick","htmlFor","Signup","email","isClicked","setIsClicked","disabled","Auth","path","Sidebar","Dashboard","Lecture","useParams","lectureNumber","batchNumber","Record","AppContainer","NotFound","App","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd700b1f.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\nimport {FC, memo} from 'react';\r\n\r\ninterface Props{};\r\n\r\nconst AuthHero: FC<Props> = (props) => {\r\n    console.log(\"AuthHero Rendering\");\r\n    useEffect( () => {\r\n        console.log(\"AuthHero rendering for the first time\");\r\n    }, []);\r\n    return(\r\n        <>\r\n            <div className=\"h-screen w-0 medium:w-1/2 bg-black text-white\">\r\n                {/* <img className=\"flex items-center justify-center p-4\"\r\n                    src=\"https://cdn.pixabay.com/photo/2015/12/10/16/39/shield-1086703_960_720.png\" alt=\"Hero\" />\r\n             */}\r\n            {/* <div className=\"mb-10 h-32 border border-black\">\r\n                        <Avatar_Group></Avatar_Group>\r\n                </div> */}            \r\n            Logo            \r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nAuthHero.defaultProps = {};\r\n\r\nexport default memo(AuthHero);","import {FC, InputHTMLAttributes, memo} from 'react';\r\nimport { FiLock } from 'react-icons/fi';\r\nimport { FiUser } from 'react-icons/fi';\r\nimport {BsAt} from 'react-icons/bs'; \r\n\r\ninterface Props extends InputHTMLAttributes<HTMLInputElement> {\r\n    touched?: boolean;\r\n    error?: string;\r\n};\r\n\r\nconst Input: FC<Props> = ({touched, error, className, placeholder,id, ...rest}) => {\r\n    return(\r\n        <>\r\n            <div className=\"flex items-center border-b pb-3.5 mt-3 hover:border-blue-700\">\r\n                {id === \"username\" ? \r\n                <FiUser className=\"text-blue-700 text-2xl\"></FiUser> : \r\n                id === \"password\" ? \r\n                <FiLock className=\"text-blue-700 text-2xl\"></FiLock> : \r\n                <BsAt className=\"text-blue-700 text-2xl\"></BsAt>\r\n                }\r\n                <input {...rest}\r\n                // onChange={(event) => {setData({...data, username:event.target.value});}} \r\n                placeholder={placeholder} id={id}\r\n                className={\"pl-2 text-md tracking-wide outline-none \" + className}></input>\r\n            </div>\r\n            {touched && <div className=\"text-red-600 text-sm\">{error}</div>}\r\n        </>\r\n    );\r\n};\r\n\r\nInput.defaultProps = {\r\n    touched: false,\r\n    error: \"\",\r\n};\r\n\r\nexport default memo(Input);","import { ButtonHTMLAttributes } from 'react';\r\nimport {FC, memo} from 'react';\r\n\r\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement>{\r\n    filled?: 'filled' | 'outlined';\r\n    theme?: 'primary' | 'secondary';\r\n    rounded?: 'more' | 'less';\r\n    children: string;\r\n    counter?: number;\r\n};\r\n\r\nconst Button: FC<Props> = ({children, className, theme, counter, \r\n        filled, rounded, ...rest}) => {\r\n\r\n    const filledClasses = \r\n        filled === 'filled' ? \"hover:shadow-none shadow-xl\" : \r\n            \"hover:shadow-xl hover:text-white\";\r\n\r\n    const themeClasses = \r\n        theme === 'primary' ? filled === 'filled' ? \"bg-blue-700 text-white\" \r\n            : \"bg-white text-blue-700 border border-blue-700 hover:bg-blue-700\" \r\n            : filled === 'filled' ? \"bg-gray-600 text-white\"\r\n            : \"bg-white text-gray-600 border border-gray-600 hover:bg-gray-600\";\r\n\r\n    const roundedClasses = \r\n        rounded === 'more' ? \"rounded-full\" : \"rounded\"; \r\n\r\n    return (\r\n        <>\r\n            <button {...rest} \r\n                className={\"py-1 px-3.5 \" \r\n                    + themeClasses + \" \" + filledClasses + \" \" + \r\n                        roundedClasses + \" \" + className}>{children}\r\n                {counter && <span \r\n                    className=\"ml-2 px-2 bg-red-500 rounded-full\">{counter}</span>}\r\n            </button>\r\n        </>\r\n    );\r\n};\r\n\r\nButton.defaultProps = {\r\n    theme: 'primary',\r\n    filled: 'filled',\r\n    rounded: 'less',\r\n};\r\n\r\nexport default memo(Button);","import React, {FC, memo} from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport {FaSpinner} from \"react-icons/fa\";\r\nimport { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from \"yup\";\r\nimport Input from '../components/Input/Input';\r\nimport Button from '../components/Button/Button';\r\n\r\ninterface Props{};\r\n\r\nconst Login: FC<Props> = (props) => {\r\n\r\n    // destructure here like this and dont need to use any variable to access \r\n    // these properties of formik for eg. const myForm = useFormik({}) \r\n\r\n    // use getFieldProps and remove handleBlur, handleChange, values and name \r\n    const {getFieldProps ,handleSubmit, touched, isSubmitting, errors} = useFormik({\r\n        initialValues: {\r\n            username: \"\",\r\n            password: \"\",\r\n        },\r\n        // for validation: yup workd well with formik \r\n        validationSchema: yup.object().shape({\r\n            username: yup.string().required(\"Username is a required field\").min(3, \"Username must have atleast 3 characters\"),\r\n            password: yup.string().required(\"Password is a required field\").min(6, ({min}) => `Password must have atleast ${min} characters`),\r\n        }),\r\n\r\n        // we can use helpers then use queryHelpers.setSubmitting or \r\n        // directly use setSubmitting\r\n        // onSubmit: (data, helpers ) => {\r\n        onSubmit: (data, {setSubmitting} ) => {\r\n            console.log(\"Form Submitting\", data);\r\n\r\n            setTimeout(() => {\r\n                console.log(\"Login Successful\");\r\n                setSubmitting(false);\r\n                history.push(\"/dashboard\");\r\n            }, 3000);\r\n        }\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const [isShown, setIsShown] = useState(false);\r\n\r\n    // // const [username, setUsername] = useState(\"\");\r\n    // // const [password, setPassword] = useState(\"\");\r\n    // const [data, setData] = useState({username: \"\", password: \"\"});\r\n    // const [touched, setTouched] = useState({username: false, password: false});\r\n    // const [submitting, setSubmitting] = useState(false);\r\n\r\n\r\n    // // the name of element whose value will be changed will be stored in the array \r\n    // // event.target.name will be either username or password and it will be used as key\r\n    // const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    //     setData({...data, [event.target.name]: event.target.value});\r\n    // };\r\n\r\n    // // if cursor goes in and comes out then blur true i.e. element is touched\r\n    // const handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    //     setTouched({...touched, [event.target.name]: true});\r\n    // };\r\n\r\n    // let usernameError = \"\";\r\n    // let passwordError = \"\";\r\n\r\n    // if(!data.username){\r\n    //     usernameError = \"Username is required\";\r\n    // }\r\n    // else if(data.username.includes(\" \") || data.username.includes(\",\") || data.username.includes(\"%\")){\r\n    //     usernameError = \"Do not enter space or comma or percentage\"; \r\n    // }\r\n\r\n    // if(!data.password){\r\n    //     passwordError = \"Password is required\";\r\n    // }\r\n    // else if(data.password.length < 6){\r\n    //     passwordError = \"Password should be of atleast 6 characters\"\r\n    // }\r\n    // else if(data.password.includes(\" \")){\r\n    //     passwordError = \"Do not enter space\"; \r\n    // }\r\n\r\n    \r\n    function show(){\r\n        setIsShown(!isShown);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex flex-col items-center py-6 mx-auto\">\r\n                <div className=\"w-full\">\r\n\r\n                    <h1 className=\"text-4xl font-mediun mb-2 text-gray-700\">Log In to \r\n                        <a className=\"text-blue-600 font-medium\" target=\"_blank\" href=\"https://designreset.com/cork/ltr/demo4/index.html\"> CORK</a> </h1>\r\n                        <p className=\"mb-14 text-sm font-medium text-gray-700\">New Here?   \r\n                        <Link to=\"/signup\">\r\n                            <span className=\"text-blue-700 border-b border-blue-700 font-mediun\"> Create an account</span>    \r\n                        </Link>\r\n                        </p>\r\n                </div>\r\n                    {/* <br></br> \r\n                    <Link to=\"/dashboard\">\r\n                        <span className=\"text-blue-600\">Go to Dashboard</span>    \r\n                    </Link> */}\r\n                    <form action=\"\" className=\"text-left\"\r\n                        // onSubmit={(event) => {\r\n                        //     event.preventDefault();\r\n                        //     if(usernameError || passwordError){\r\n                        //         console.log(\"Form submission failed\");\r\n                        //         return;\r\n                        //     }\r\n                        //     setSubmitting(true);\r\n                        //     console.log(\"Login started with data: \", data);\r\n\r\n                        //     setTimeout(() => {\r\n                        //         console.log(\"Login Successful\");\r\n                        //         history.push(\"/dashboard\");\r\n                        //     }, 3000);\r\n                        // }}\r\n\r\n                        onSubmit = {handleSubmit}\r\n                        >\r\n                        <div className=\"w-96\">\r\n                            <Input\r\n                                id=\"username\" type=\"text\" autoComplete=\"current-username\" required\r\n                                touched={touched.username} error={errors.username}\r\n                                {...getFieldProps(\"username\")} placeholder=\"Username\"\r\n                            />\r\n                            {/* <div className=\"flex items-center border-b pb-3.5 mt-3 hover:border-blue-700\">\r\n                                <FiUser className=\"text-blue-700 text-2xl\"></FiUser>\r\n                                <input required type=\"text\" id=\"username\" {...getFieldProps(\"username\")}\r\n                                // onChange={(event) => {setData({...data, username:event.target.value});}} \r\n                                placeholder=\"Username\"\r\n                                className=\"pl-2 text-md tracking-wide outline-none\"></input>\r\n                            </div>\r\n                            {touched.username && <div className=\"text-red-600 text-sm\">{errors.username}</div>} */}\r\n                                <div className=\"mt-8\"></div>\r\n                            {/* <div className=\"flex items-center border-b pb-3.5 mt-8 hover:border-blue-700\"> */}\r\n                                <Input\r\n                                    id=\"password\" type={isShown ? \"text\" : \"password\"} autoComplete=\"current-password\" required\r\n                                    touched={touched.password} error={errors.password} \r\n                                    {...getFieldProps(\"password\")} placeholder=\"Password\"\r\n                                />\r\n                                {/* <input required type=\"password\" id=\"password\" {...getFieldProps(\"password\")} \r\n                                // onChange={(event) => {setData({...data, password:event.target.value})}} \r\n                                placeholder=\"Password\"\r\n                                className=\"pl-2 text-md tracking-wide outline-none\"></input>\r\n                            </div>\r\n                            {touched.password && <div className=\"text-red-600 text-sm\">{errors.password}</div>} */}\r\n\r\n                            <div className=\"flex justify-between mt-8\">\r\n                                <div className=\"text-left flex items-center\">\r\n                                    <p className=\"inline-block text-sm tracking-wide \r\n                                        font-medium text-gray-700\">Show Password</p>\r\n                                    {isShown ? \r\n                                    <div onClick={show} className=\"w-8 h-4 ml-2 flex items-center bg-blue-600 rounded-full cursor-pointer py-1 px-0.5\">\r\n                                        <div className=\"bg-white w-3 h-3 rounded-full shadow-md ml-auto\"></div>\r\n                                    </div> :\r\n                                    <div onClick={show} className=\"w-8 h-4 ml-2 flex items-center bg-gray-200 rounded-full py-1 pl-0.5 cursor-pointer\">\r\n                                        <div className=\"bg-blue-600 w-3 h-3 rounded-full shadow-md\"></div>\r\n                                    </div> \r\n                                    }\r\n                                </div>\r\n                                <div className=\"pr-2 flex items-center\">\r\n                                    {/* <button type=\"submit\" className=\"bg-blue-700 text-white rounded py-1 px-3.5 shadow-xl\">Log In</button> */}\r\n                                    <Button>Log In</Button>\r\n                                    {isSubmitting && <FaSpinner className=\"ml-2 text-blue-700 text-xl animate-spin\"></FaSpinner>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mt-12 text-center mb-4\">\r\n                                    <label htmlFor=\"checkbox\" className=\"pl-4 text-gray-400 text-md cursor-pointer\">\r\n                                        <input type=\"checkbox\" id=\"checkbox\" className=\"cursor-pointer mr-3\"></input>\r\n                                        Keep me logged in\r\n                                    </label>\r\n                            </div>\r\n                            <div className=\"text-center text-blue-600 font-medium\">\r\n                                <Link to=\"/forgotPassword\">\r\n                                    Forgot Password ?\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <p className=\"mt-auto text-gray-900 font-sm\">\r\n                    © 2020 All Rights Reserved. \r\n                    <a className=\"text-blue-600 font-medium\" target=\"_blank\" href=\"https://designreset.com/cork/ltr/demo4/index.html\"> CORK </a>\r\n                    is a product of <br/> Designreset. \r\n                    <a className=\"text-blue-600 font-medium\" href=\"javascript:void(0);\"> Cookie Preferences,</a>\r\n                    <a className=\"text-blue-600 font-medium\" href=\"javascript:void(0);\"> Privacy, and</a>\r\n                    <a className=\"text-blue-600 font-medium\" href=\"javascript:void(0);\"> Terms.</a>\r\n                    </p>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nLogin.defaultProps = {};\r\n\r\nexport default memo(Login); ","import {FC, memo} from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport {useState} from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from \"yup\";\r\nimport Input from '../components/Input/Input';\r\nimport { FaSpinner } from 'react-icons/fa';\r\nimport Button from '../components/Button/Button';\r\n\r\ninterface Props{};\r\n\r\nconst Signup: FC<Props> = (props) => {\r\n\r\n    const {getFieldProps ,handleSubmit, touched, isSubmitting, errors} = useFormik({\r\n        initialValues: {\r\n            username: \"\",\r\n            password: \"\",\r\n            email: \"\",\r\n        },\r\n\r\n        validationSchema: yup.object().shape({\r\n            username: yup.string().required(\"Username is a required field\").min(3, \"Username must have atleast 3 characters\"),\r\n            email: yup.string().required(\"Email is a required field\").email(\"Invalid Email address\"),\r\n            password: yup.string().required(\"Password is a required field\").min(6, ({min}) => `Password must have atleast ${min} characters`),\r\n        }),\r\n\r\n        onSubmit: (data, {setSubmitting} ) => {\r\n            console.log(\"Form Submitting\", data);\r\n\r\n            setTimeout(() => {\r\n                console.log(\"Sign Up Successful\");\r\n                setSubmitting(false);\r\n                history.push(\"/dashboard\");\r\n            }, 3000);\r\n        }\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const [isShown, setIsShown] = useState(false);\r\n    const [isClicked, setIsClicked] = useState(false);\r\n\r\n    function show(){\r\n        setIsShown(!isShown);\r\n    };\r\n\r\n    function clicked(){\r\n        setIsClicked(!isClicked);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex flex-col items-center py-5 mx-auto\">\r\n                <div className=\"w-full\">\r\n                    <h1 className=\"text-4xl font-mediun mb-2 text-gray-700 leading-snug\">\r\n                        Get started with a <br/>free account\r\n                    </h1>\r\n                    <p className=\"text-gray-700 font-medium\">Already have an account? \r\n                        <Link to=\"/login\">\r\n                            <span className=\"text-blue-600 border-b border-blue-600 font-medium\"> Log in</span>\r\n                        </Link>\r\n                    </p>\r\n                    <form action=\"\" className=\"text-left\" onSubmit={handleSubmit}>\r\n                        <div className=\"w-96\">\r\n                            <div className=\"mt-16\"></div>\r\n                            <Input\r\n                                id=\"username\" type=\"text\" autoComplete=\"current-username\" required\r\n                                touched={touched.username} error={errors.username}\r\n                                {...getFieldProps(\"username\")} placeholder=\"Username\"\r\n                            />\r\n                            <div className=\"mt-8\"></div>\r\n                            <Input\r\n                                id=\"email\" type=\"email\" autoComplete=\"current-email\" required\r\n                                touched={touched.email} error={errors.email}\r\n                                {...getFieldProps(\"email\")} placeholder=\"Email\"\r\n                            />\r\n                            <div className=\"mt-8\"></div>\r\n                            <Input\r\n                                id=\"password\" type={isShown ? \"text\" : \"password\"} autoComplete=\"current-password\" required\r\n                                touched={touched.password} error={errors.password} \r\n                                {...getFieldProps(\"password\")} placeholder=\"Password\"\r\n                            />\r\n                            <div className=\"mt-8 text-left mb-4\">\r\n                                <label htmlFor=\"checkbox\" className=\"pl-4 text-gray-400 text-md cursor-pointer\">\r\n                                <input type=\"checkbox\" id=\"checkbox\" className=\"cursor-pointer mr-3\" onClick={clicked}></input>\r\n                                    I agree to the \r\n                                    <a href=\"#\" className=\"text-blue-500\"> terms and conditions</a>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"flex justify-between mt-8\">\r\n                                <div className=\"text-left flex items-center\">\r\n                                    <p className=\"inline-block text-sm tracking-wide \r\n                                    font-medium text-gray-700\">Show Password</p>\r\n                                    {isShown ? \r\n                                    <div onClick={show} className=\"w-8 h-4 ml-2 flex items-center bg-blue-600 rounded-full cursor-pointer py-1 px-0.5\">\r\n                                        <div className=\"bg-white w-3 h-3 rounded-full shadow-md ml-auto\"></div>\r\n                                    </div> :\r\n                                    <div onClick={show} className=\"w-8 h-4 ml-2 flex items-center bg-gray-200 rounded-full py-1 pl-0.5 cursor-pointer\">\r\n                                        <div className=\"bg-blue-600 w-3 h-3 rounded-full shadow-md\"></div>\r\n                                    </div> \r\n                                    }\r\n                                </div>\r\n                                <div className=\"pr-2 flex items-center\">\r\n                                    {isClicked ? \r\n                                    <Button>Get Started!</Button>\r\n                                        : \r\n                                    <Button disabled>Get Started!</Button>}\r\n                                    {isSubmitting && <FaSpinner className=\"ml-2 text-blue-700 text-xl animate-spin\"></FaSpinner>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <p className=\"text-gray-900 font-sm mt-16\">\r\n                    © 2020 All Rights Reserved. \r\n                    <a className=\"text-blue-600 font-medium\" target=\"_blank\" href=\"https://designreset.com/cork/ltr/demo4/index.html\"> CORK </a>\r\n                    is a product of <br/> Designreset. \r\n                    <a className=\"text-blue-600 font-medium\" href=\"javascript:void(0);\"> Cookie Preferences,</a>\r\n                    <a className=\"text-blue-600 font-medium\" href=\"javascript:void(0);\"> Privacy, and</a>\r\n                    <a className=\"text-blue-600 font-medium\" href=\"javascript:void(0);\"> Terms.</a>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nSignup.defaultProps = {};\r\n\r\nexport default memo(Signup);","import {FC, memo} from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport AuthHero from '../components/AuthHero';\r\nimport LoginPage from './Login.page';\r\nimport SignupPage from './Signup.page';\r\n\r\ninterface Props {};\r\n\r\nconst Auth: FC<Props> = (props) => {\r\n    return(\r\n        <>\r\n            <div className=\"flex flex-row justify-between\">\r\n                <Switch>\r\n                    <Route path=\"/login\">\r\n                        <LoginPage></LoginPage>\r\n                    </Route>\r\n                    <Route path=\"/signup\">\r\n                        <SignupPage></SignupPage>\r\n                    </Route>\r\n                </Switch>\r\n                <AuthHero></AuthHero>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nAuth.defaultProps = {};\r\n\r\nexport default memo(Auth);","import {FC, memo} from 'react';\r\n\r\ninterface Props {};\r\n\r\nconst Sidebar: FC<Props> = (props) => {\r\n    return(\r\n        <>\r\n            <div className=\"h-screen w-80 bg-gray-500\">\r\n                This is Sidebar.\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nSidebar.defaultProps = {};\r\n\r\nexport default memo(Sidebar);","import {FC, memo} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface Props{};\r\n\r\nconst Dashboard: FC<Props> = (props) => {\r\n    return (\r\n        <>\r\n            <div>\r\n                This is Dashboard page.\r\n                <br></br>\r\n                <Link to=\"/recordings\">\r\n                    <span className=\"text-blue-600\">Go to Recordings</span>\r\n                </Link>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nDashboard.defaultProps = {};\r\n\r\nexport default memo(Dashboard);","import {FC, memo} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\ninterface Props {};\r\ninterface RouteParams {\r\n    lectureNumber: string;\r\n    batchNumber: string;\r\n};\r\n\r\nconst Lecture: FC<Props> = (props) => {\r\n\r\n    const {lectureNumber, batchNumber} = useParams<RouteParams>();\r\n\r\n    return(\r\n        <>\r\n            <div className=\"h-screen w-screen\">\r\n                Showing data of lecture #{lectureNumber} of batch #{batchNumber}.\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nLecture.defaultProps = {};\r\n\r\nexport default memo(Lecture);","import {FC, memo} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface Props{};\r\n\r\nconst Record: FC<Props> = (props) => {\r\n    return (\r\n        <>\r\n            <div>\r\n                This is Recordings Page\r\n                <br/>\r\n                <Link to=\"/dashboard\">\r\n                    <span className=\"text-blue-600\">Go to Dashboard</span>\r\n                </Link>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nRecord.defaultProps = {};\r\n\r\nexport default memo(Record);","import {FC, memo} from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Sidebar from '../components/Sidebar';\r\nimport DashboardPage from './Dashboard.page';\r\nimport LecturePage from './Lecture.page';\r\nimport RecordPage from './Record.page';\r\n\r\ninterface Props {};\r\n\r\nconst AppContainer: FC<Props> = (props) => {\r\n    return(\r\n        <>\r\n        <div className=\"flex flex-row\">\r\n            <Sidebar></Sidebar>\r\n            <Route path=\"/dashboard\">\r\n              <DashboardPage></DashboardPage>\r\n            </Route>\r\n            <Route path=\"/recordings\">\r\n                <RecordPage></RecordPage>\r\n            </Route>\r\n            <Route path=\"/batch/:batchNumber/lecture/:lectureNumber\">\r\n                <LecturePage></LecturePage>\r\n            </Route>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nAppContainer.defaultProps = {};\r\n\r\nexport default memo(AppContainer);","import {FC, memo} from 'react';\r\n\r\ninterface Props {};\r\n\r\nconst NotFound: FC<Props> = (props) => {\r\n    return(\r\n        <>\r\n            <div className=\"bg-blue-500 h-screen w-screen\">\r\n                Sorry, the page you are looking for is not found.\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nNotFound.defaultProps = {};\r\n\r\nexport default memo(NotFound);","import React from 'react';\nimport './App.css';\nimport {BrowserRouter, Switch, Route, Redirect} from 'react-router-dom';\nimport AuthPage from './pages/Auth.page';\nimport AppContainerPage from './pages/AppContainer.page';\nimport NotFoundPage from './pages/NotFound.page';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/Devslane_Project\" exact>\n          <Redirect to=\"/login\"></Redirect>\n        </Route>\n        <Route path={[\"/login\", \"/signup\"]} exact>\n          <AuthPage></AuthPage>\n        </Route>\n        <Route path={[\"/dashboard\", \"/recordings\", \n                      \"/batch/:batchNumber/lecture/:lectureNumber\"]} exact>\n          <AppContainerPage></AppContainerPage>\n        </Route>\n        {/* if no url matches  */}\n        <Route>\n          <NotFoundPage></NotFoundPage>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}